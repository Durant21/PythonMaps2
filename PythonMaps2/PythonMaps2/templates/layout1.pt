<!DOCTYPE html>
<html lang="en">
<head>
  <title>layout 1</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  <style>
    /* Remove the navbar's default margin-bottom and rounded borders */
    .navbar {
      margin-bottom: 0;
      border-radius: 0;
    }

    /* Add a gray background color and some padding to the footer */
    footer {
      background-color: #f2f2f2;
      padding: 25px;
    }

  .carousel-inner img {
      width: 100%; /* Set width to 100% */
      margin: auto;
      min-height:200px;
  }

  /* Hide the carousel text when the screen is less than 600 pixels wide */
  @media (max-width: 600px) {
    .carousel-caption {
      display: none;
    }
  }
  </style>


    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/themes/redmond/jquery-ui.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.2/css/ui.jqgrid.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/free-jqgrid/4.15.2/jquery.jqgrid.min.js"></script>


    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.4.0/dist/leaflet.css"
   integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
   crossorigin=""/>

     <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.4.0/dist/leaflet.js"
   integrity="sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg=="
   crossorigin=""></script>

    <style>
        #mapid { height: 280px; }
    </style>


    <script src='https://api.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.52.0/mapbox-gl.css' rel='stylesheet' />

     <!-- Load Omnivore plugin to convert CSV to GeoJSON format -->
    <script src='https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-omnivore/v0.3.1/leaflet-omnivore.min.js'></script>

    <!--?charting libraries-->
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js"></script>
</head>

<script type="text/javascript">
    google.load("visualization","1",{packages: ["corechart"]});
</script>


<script>
    function getMapAndTable() {
        getStationsForMap();
        getStationsForTable();
        buildChart_StationTimeseries();
    }


    function getStationsForMap() {

        $.ajax({
            type: "GET",
            url: "http://localhost:6543/api/stations",
            contentType: "application/json; charset=utf-8",
            dataType: "json",

            beforeSend: function() {

            },

            success: function(data) {
                jsonObject = data;

                // var myMarker = L.marker([37.10418, -106.6287], {title: "MyPoint", alt: "The Big I", draggable: true})
                // .addTo(map)
                // .on('dragend', function() {
                //     var coord = String(myMarker.getLatLng()).split(',');
                //     console.log(coord);
                //     var lat = coord[0].split('(');
                //     console.log(lat);
                //     var lng = coord[1].split(')');
                //     console.log(lng);
                //     myMarker.bindPopup("Moved to: " + lat[1] + ", " + lng[0] + ".");
                // });
                // myMarker.bindPopup("Moved to: ee");


                var options = {
                	center: [35.10418, -106.62987],
                	zoom: 2
                }

                //var map = L.map('map', options);

                L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {attribution: 'OSM'})
                .addTo(map);

                // Load CSV point data
                var myMarker;
                var options1 = {
                        center: [35.10418, -106.62987],
                        zoom: 2
                    }

                    if (map == null){
                       var map1 = L.map('map', options1);
                    }


                var i, t,u,lat, long;
                u = 0;
                    for (i = 0; i < jsonObject.length; i++) {
                        lat  = jsonObject[i]["SiteLatitude"];
                        long = jsonObject[i]["SiteLongitude"];


                         if (isNaN(lat) || isNaN(long)) {
                            //document.write(num1 + " is not a number <br/>");

                         } else {
                            //document.write(num1 + " is a number <br/>");
                            myMarker = L.marker([lat,long], {title: "MyPoint", alt: "The Big I", draggable: true})
                             .addTo(map)
                         }


                        u = u + 1;
                    }


                    var myLines = [{
                        "type": "LineString",
                        "coordinates": [[-100, 40], [-105, 45], [-110, 55]]
                    }, {
                        "type": "LineString",
                        "coordinates": [[-105, 40], [-110, 45], [-115, 55]]
                    }];

                    var myStyle = {
                        "color": "#ff7800",
                        "weight": 5,
                        "opacity": 0.65
                    };

                    // L.geoJSON(myLines, {
                    //     style: myStyle
                    // }).addTo(map);

                    var highlight = {
                        'color': '#333333',
                        'weight': 2,
                        'opacity': 1
                    };

                    var t = map._layers;//['name'+LayerID].setStyle(highlight);
                    // map._layers[81].setS(highlight);
                    // var o = map._layers["_leaflet_id"] = 81;


                    // Load geojson files
                    var geojsonLayer1 = new L.GeoJSON.AJAX("/static/shapes/NHDFlowLine_sub.geojson", {onEachFeature:popUp});
                    //geojsonLayer1.addTo(map);

                    var geojsonLayer2 = new L.GeoJSON.AJAX("/static/shapes/NHDFlowLine_sub2.geojson", {onEachFeature:popUp});
                    //geojsonLayer2.addTo(map);

                    var geojsonLayer3 = new L.GeoJSON.AJAX("/static/shapes/NHDFlowLine_sub3.geojson", {onEachFeature:popUp});
                    //geojsonLayer3.addTo(map);

                    var geojsonLayer4 = new L.GeoJSON.AJAX("/static/shapes/NHDFlowLine_sub4.geojson", {onEachFeature:popUp});
                    //geojsonLayer4.addTo(map);

                    var geojsonLayer5 = new L.GeoJSON.AJAX("/static/shapes/NHDFlowLine_sub5.geojson", {onEachFeature:popUp});
                    //geojsonLayer5.addTo(map);


                    // Load GeoServer layer
                      // var wmsLayer = L.tileLayer.wms('http://localhost:8080/geoserver/RGIS/wms?', {
                      //       layers: 'RGIS:tl_2010_35_county10',
                      //       transparency: 'true',
                      //       format: 'image/png',
                      //       maxZoom: 21,
                      //       opacity: 0.5
                      //   }).addTo(map);

                    // Load GeoServer-PostGIS layer
                      var wmsLayer2 = L.tileLayer.wms('http://localhost:8080/geoserver/RGIS/wms?', {
                            layers: 'NaturalEarth:council5',
                            format: 'image/png',
                            version: '1.1.0',
                          tms: 'true',
                            attribution: "RGIS"
                        }).addTo(map);
            //alert(u);

            }
        })
    }

     function popUp(feature, layer) {
        layer.bindPopup(feature.properties.name);
      }

    function getStationsForTable() {

        var grid = jQuery("#grid_stations").jqGrid({
            // datatype: "json",
            // contentType: "application/json; charset=utf-8",
            width: 600,
            //scrollerbar: true,
            height: 175,
            colNames: ['SiteNumber','SiteName','SiteCategory','SiteAgency','SiteLongitude','SiteLatitude','SiteNWISURL'],
            colModel: [
                { name: 'SiteNumber', index: 'SiteNumber', width: 100, align: 'right'},
                { name: 'SiteName', index: 'SiteName', width: 100, align: 'right'},
                { name: 'SiteCategory', index: 'SiteCategory', width: 100, align: 'right'},
                { name: 'SiteAgency', index: 'SiteAgency', width: 100, align: 'right'},
                { name: 'SiteLongitude', index: 'SiteLongitude', width: 100, align: 'right'},
                { name: 'SiteLatitude', index: 'SiteLatitude', width: 100, align: 'right'},
                { name: 'SiteNWISURL', index: 'SiteNWISURL', width: 100, align: 'right'}
                ],
            multiselect: false,
            ondblClickRow: function(stationid) {
                //alert("You double click row with stationid: "+stationid);
                var data = jQuery("#grid_stations").jqGrid('getRowData',stationid);
                //alert("Status ->"+data.stationid);
                var _lat = data.SiteLatitude;
                var _lon = data.SiteLongitude;
                centerAndZoom(_lat,_lon);
                },
            caption: "Stations"
        })


        $.ajax({
            type: "GET",
            url: "http://localhost:6543/api/stations",
            contentType: "application/json; charset=utf-8",
            dataType: "json",

            beforeSend: function() {

            },

            success: function(data) {
                jsonObject = data;

                var  t,u,lat, long;
                u = 0;
                    for (var i = 0; i < jsonObject.length; i++) {
                        lat  = jsonObject[i]["latitude"];
                        long = jsonObject[i]["longitude"];

                        jQuery("#grid_stations").jqGrid('addRowData', i + 1, jsonObject[i])
                        u = u + 1;
                    }

            //alert(u);

            }
        })
    }

    // Bar Charts
    function buildChart_StationTimeseries() {

        $.ajax({
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json',
            url: 'http://localhost:6543/api/timeseries_data',
            beforeSend: function () {
               // SetBusy();
            },
            success: function (response) {
               // SetNotBusy();
                var jsonObj = response;

                // Load the Visualization API and the corechart package.
                google.charts.load('current', {'packages':['corechart']});

                // Set a callback to run when the Google Visualization API is loaded.

                //google.charts.setOnLoadCallback(drawchart_TimeSeries);
                drawchart_TimeSeries(jsonObj); // calling method
            },

            error: function () {
                alert("Error3 loading data! Please try again.");
            }
        });

    }



    function drawchart_TimeSeries(dataValues) {
        // Callback that creates and populates a data table,
        // instantiates the pie chart, passes in the data and
        // draws it.


      //google.setOnLoadCallback(drawChart(3));
        var data = new google.visualization.DataTable();



        //data.addColumn('string', 'ContractorName');
        data.addColumn('string', 'Date');
        data.addColumn('number', 'discharge cfs 00060');
        //data.addColumn('number', 'test');
         var a = [3];
        // var b = [3];
        //var w = 0;
        var u1, u2, u3, u4;
        for (var i = 0; i < dataValues.length; i++) {
             a = dataValues[i];
             q = a.width;
            // for (var key in a) {
            //     //alert("");
            // };
            //for (var w = 0; w < a.length; w++) {
            //
                //w = 1;
                //g_strContractorName = a[w].ContractorName;
                g_strContractorName = 'contractor name';    //a.ContractorName;
                g_strYear = 'year';                         //a.RYear;
                g_EncounterTypeDescription = 'Description';            //a.EncounterTypeDescription;
                g_site_no = a["site_no"];

                //b[0] = a[w].ContractorName;
                // b[0] = a.ContractorName;
                // b[1] = a.Month;
                // b[2] = a.EncounterCount;

                //u1 = a.ContractorName;
                u2 = a["datetime"];
                u3 = parseFloat(a["99908_00060_00003"]);
                //u4 = 100;
                data.addRow([u2, u3]);
                //data.addRow([b[0], b[2], b[1]]);
                //w = w + 1;
            //}
        }
        // Instantiate and draw our chart, passing in some options
        var chart = new google.visualization.ColumnChart(document.getElementById('divChartAnalysis_CountVsMean'));
        //
        chart.draw(data,
        {
            title: "USGS - Site: " + g_site_no,
            //title: "-Encounters: " + g_strContractorName + " " + g_strYear + "\n" + g_EncounterTypeDescription,
            position: "top",
            fontsize: "14px",
            chartArea: { width: '65%' },
        });

    }

</script>




<body onload="onLoad()">

<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#">Logo1</a>
    </div>
    <div class="collapse navbar-collapse" id="myNavbar">
      <ul class="nav navbar-nav">
        <li class="active"><a href="#">Home</a></li>
        <li><a href="/about#">About</a></li>
        <li><a href="#">Projects</a></li>
        <li><a href="#">Contact</a></li>
      </ul>
      <ul class="nav navbar-nav navbar-right">
        <li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>
      </ul>
    </div>
  </div>
</nav>

<br><br>

<div class="container text-center">

    <div class="row">
    <div class="col-sm-6">
        <div id='map' style='width: 100%; height: 300px;'></div>
        <button type="button" onclick="getMapAndTable()">Get Data</button>
        <br><br>
    </div>
    <div class="col-sm-6">

        <table id="grid_stations"></table>
    </div>

  </div>

    <div class="row">
    <div class="col-sm-8">
      <!--?<img src="https://placehold.it/150x80?text=GRAPH" class="img-responsive" style="width:100%" alt="Image">-->
      <p>Current Project</p>
        <div id="divCountVsMean"  >

            <table border="1" aria-valuenow="" align="center"
                   style="width: 100%; height: 44px;">
                <tr>
                    <td>
                        <label >timeseries</label>
                        <!--?<select id="ddlEncounterDescForAnalyses" data-bind="options: dbEncounterDescForAnalyses, optionsText: 'Desc', optionsValue: ''"></select>-->
                    </td>
                </tr>
            </table>
            <table border="1" aria-valuenow="" align="center"
                   style="width: 100%; height: 404px;">
                <!--?<tr>-->
                    <!--?<td>-->
                        <!-- <select id="blogInfo" data-bind="options: dbSearchByName, optionsText: 'blogName', optionsValue: 'blogId'"></select>-->
                    <!--?</td>-->
                <!--?</tr>-->
                <tr>
                    <td>
                        <div id="divChartAnalysis_CountVsMean" class="frMainDiv" style="width: 95%; height: 350px;"></div>
                    </td>
                </tr>

            </table>
        </div>
    </div>

    <div class="col-sm-4">
      <div class="well">
       <p>Some text..</p>
      </div>
      <div class="well">
       <p>Some text..</p>
      </div>
    </div>
  </div>
</div><br>

<footer class="container-fluid text-center">
  <p>Footer Text</p>
</footer>

</body>

<script>
    function onLoad() {
        // var options = {
		// 	center: [35.10418, -106.62987],
		// 	zoom: 2
		// }
        //
		// var map = L.map('map', options);
        //
		// L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {attribution: 'OSM'})
		// .addTo(map);
    }

    function centerAndZoom(_x,_y) {
        map.setView([_x,_y], 12)
    }


    var options = {
    center: [35.10418, -106.62987],
    zoom: 2
    }

    if (map == null){
       var map = L.map('map', options);
    }

    // L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {attribution: 'OSM'})
    // .addTo(map);
</script>
</html>